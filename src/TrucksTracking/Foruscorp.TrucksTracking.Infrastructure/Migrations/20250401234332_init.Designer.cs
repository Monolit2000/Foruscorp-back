// <auto-generated />
using System;
using Foruscorp.TrucksTracking.Infrastructure.Percistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Foruscorp.TrucksTracking.Infrastructure.Migrations
{
    [DbContext(typeof(TuckTrackingContext))]
    [Migration("20250401234332_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TuckTracking")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Foruscorp.TrucksTracking.Domain.Trucks.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("TruckId");

                    b.Property<Guid>("CurrentRouteId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("FuelStatus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TruckId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CurrentRouteId");

                    b.HasIndex("TruckId");

                    b.ToTable("Trucks", "TuckTracking", t =>
                        {
                            t.Property("TruckId")
                                .HasColumnName("TruckId1");
                        });
                });

            modelBuilder.Entity("Foruscorp.TrucksTracking.Domain.Trucks.Truck", b =>
                {
                    b.OwnsOne("Foruscorp.TrucksTracking.Domain.Trucks.TruckLocation", "CurrentTruckLocation", b1 =>
                        {
                            b1.Property<Guid>("TruckId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("TruckLocationId");

                            b1.Property<DateTime>("RecordedAt")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("TruckId");

                            b1.ToTable("CurrentTruckLocations", "TuckTracking");

                            b1.WithOwner()
                                .HasForeignKey("TruckId");

                            b1.OwnsOne("Foruscorp.TrucksTracking.Domain.Trucks.GeoPoint", "Location", b2 =>
                                {
                                    b2.Property<Guid>("TruckLocationTruckId")
                                        .HasColumnType("uuid");

                                    b2.Property<decimal>("Latitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Latitude");

                                    b2.Property<decimal>("Longitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Longitude");

                                    b2.HasKey("TruckLocationTruckId");

                                    b2.ToTable("CurrentTruckLocations", "TuckTracking");

                                    b2.WithOwner()
                                        .HasForeignKey("TruckLocationTruckId");
                                });

                            b1.Navigation("Location");
                        });

                    b.OwnsMany("Foruscorp.TrucksTracking.Domain.Trucks.TruckLocation", "TruckLocationHistory", b1 =>
                        {
                            b1.Property<Guid>("TruckId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("TruckLocationId");

                            b1.Property<DateTime>("RecordedAt")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("TruckId", "Id");

                            b1.ToTable("TruckLocationHistory", "TuckTracking");

                            b1.WithOwner()
                                .HasForeignKey("TruckId");

                            b1.OwnsOne("Foruscorp.TrucksTracking.Domain.Trucks.GeoPoint", "Location", b2 =>
                                {
                                    b2.Property<Guid>("TruckLocationTruckId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("TruckLocationId")
                                        .HasColumnType("uuid");

                                    b2.Property<decimal>("Latitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Latitude");

                                    b2.Property<decimal>("Longitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Longitude");

                                    b2.HasKey("TruckLocationTruckId", "TruckLocationId");

                                    b2.ToTable("TruckLocationHistory", "TuckTracking");

                                    b2.WithOwner()
                                        .HasForeignKey("TruckLocationTruckId", "TruckLocationId");
                                });

                            b1.Navigation("Location");
                        });

                    b.OwnsMany("Foruscorp.TrucksTracking.Domain.Trucks.TruckFuel", "FuelHistory", b1 =>
                        {
                            b1.Property<Guid>("TruckId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("TruckFuelId");

                            b1.Property<decimal>("NewFuelLevel")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PreviousFuelLevel")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<DateTime>("RecordedAt")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("TruckId", "Id");

                            b1.ToTable("TruckFuelHistory", "TuckTracking");

                            b1.WithOwner()
                                .HasForeignKey("TruckId");

                            b1.OwnsOne("Foruscorp.TrucksTracking.Domain.Trucks.GeoPoint", "Location", b2 =>
                                {
                                    b2.Property<Guid>("TruckFuelTruckId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("TruckFuelId")
                                        .HasColumnType("uuid");

                                    b2.Property<decimal>("Latitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Latitude");

                                    b2.Property<decimal>("Longitude")
                                        .HasColumnType("decimal(9,6)")
                                        .HasColumnName("Longitude");

                                    b2.HasKey("TruckFuelTruckId", "TruckFuelId");

                                    b2.ToTable("TruckFuelHistory", "TuckTracking");

                                    b2.WithOwner()
                                        .HasForeignKey("TruckFuelTruckId", "TruckFuelId");
                                });

                            b1.Navigation("Location");
                        });

                    b.Navigation("CurrentTruckLocation");

                    b.Navigation("FuelHistory");

                    b.Navigation("TruckLocationHistory");
                });
#pragma warning restore 612, 618
        }
    }
}


name: CI/CD for ASP.NET Core with Docker Compose on EC2


on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          include-prerelease: true
        
      - name: Restore dependencies ðŸ“‚
        run: dotnet restore ./Foruscorp.sln
      
      - name: Build ðŸ§±
        run: dotnet build ./Foruscorp.sln --no-restore


     
      - name: Configure SSH
        run: |
            mkdir -p ~/.ssh/
            touch ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            ls -l ~/.ssh/
            echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
            chmod 600 ~/.ssh/id_ed25519
            echo "Scanning host: ${{ secrets.EC2_HOST }}"
            ssh-keyscan -t rsa ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || true
            cat ~/.ssh/known_hosts

    
      - name: Deploy to EC2
        env:
          SAMSARA_API_TOKEN: ${{ secrets.SAMSARA_API_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ec2-user@${{ secrets.EC2_HOST }} '
            cd /home/ec2-user/Foruscorp-back &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            echo 'SAMSARA_API_TOKEN=$SAMSARA_API_TOKEN' > .env &&
            echo 'SAMSARA_API_TOKEN written to .env' &&
            cat .env &&
            sudo docker-compose down &&
            sudo docker system prune -a -f &&
            sudo docker-compose up -d --build &&
            echo 'Checking running containers' &&
            sudo docker ps '
          



      # - name: Test API
      #   run: |
      #     sleep 10 
      #     curl --retry 5 --retry-delay 5 --retry-max-time 30 http://${{ secrets.EC2_HOST }}:5000/api/health || exit 1

      - name: Clean up SSH key
        if: always()
        run: |
          rm -f ~/.ssh/id_ed25519

# name: Build

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   Build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
  
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet-version: 8.0.x
        
#     - name: Restore dependencies ðŸ“‚
#       run: dotnet restore ./Foruscorp.sln
      
#     - name: Build ðŸ§±
#       run: dotnet build ./Foruscorp.sln --no-restore

    # - name: Test ðŸ§ª
    # run: dotnet test ./I3Lab.sln --no-build --verbosity normal

  # Test:
  #   runs-on: ubuntu-latest
  #   needs: Build

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 8.0.x

  #   - name: Restore dependencies
  #     run: dotnet restore ./Foruscorp.sln

  #   - name: Test
  #     run: dotnet test ./Foruscorp.sln --no-build --verbosity normal

  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: Test

  #   steps:
  #   - name: Install SSH client
  #     run: sudo apt-get install openssh-client

  #   - name: Add SSH key
  #     uses: webfactory/ssh-agent@v0.8.1
  #     with:
  #       ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

  #   - name: Deploy code via Git
  #     run: |
  #       git remote add production ssh://${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}/repos/Foruscorp.git
  #       git push production master

  #   - name: Deploy with docker-compose
  #     run: |
  #       ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /path/to/deploy && docker-compose pull && docker-compose up -d"

